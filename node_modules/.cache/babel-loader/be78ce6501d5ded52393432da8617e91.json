{"ast":null,"code":"import _classCallCheck from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alexkim/code/twitterusername/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alexkim/code/twitterusername/src/App.js\";\nimport React, { Component } from 'react'; // import debounce from 'lodash/debounce';\n\nimport axios from 'axios'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Suggestion from './Suggestion';\nimport Loading from './Loading';\nimport Submit from './Submit';\nimport Header from './Header';\n\nvar TwitterTextArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TwitterTextArea, _Component);\n\n  function TwitterTextArea(props) {\n    var _this;\n\n    _classCallCheck(this, TwitterTextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TwitterTextArea).call(this, props));\n    _this.state = {\n      currentInput: \"\",\n      currentSearch: \"\",\n      selected: \"\",\n      charactersLeft: 280,\n      prevSearches: {// \"da\" : [\n        //   {\"screen_name\": \"Dan\", \"profile_image_url\": \"dan.jpg\"},\n        //   {\"screen_name\": \"David\", \"profile_image_url\": \"david.jpg\"}\n        // ]\n        // ,\n        // \"sprout\" : [\n        //    {\"screen_name\": \"SproutSocial\", \"profile_image_url\": \"sprout.jpg\"},\n        //    {\"screen_name\": \"SproutSupport\", \"profile_image_url\": \"support.jpg\"}\n        // ]\n      },\n      loading: false,\n      allowXHR: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.allowXHR = _this.allowXHR.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TwitterTextArea, [{\n    key: \"allowXHR\",\n    value: function allowXHR() {\n      this.setState({\n        allowXHR: true\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this2 = this;\n\n      var currentText = e.target.value; // this is the entire value of textarea\n\n      this.setState({\n        allowXHR: false,\n        currentInput: currentText,\n        charactersLeft: 280 - currentText.length\n      });\n      console.log(1, \"setState allowXHR FALSE\");\n      console.log(2, \"setTimeout to allowXHR TRUE in .5 seconds...\");\n      setTimeout(this.allowXHR, 500);\n      var currentTextArray = currentText.split(\" \"); // going to split(\" \") by each word\n      //now looking for any possible tagging and then making possible changes\n\n      for (var i = 0; i < currentTextArray.length; i++) {\n        if (/[a-zA-Z0-9]/.test(currentTextArray[i].charAt(1)) && /^(@)/.test(currentTextArray[i]) && currentTextArray[i].length >= 3 && currentTextArray[i].charAt(currentTextArray[i].length) != \" \") {\n          var results;\n\n          (function () {\n            if (_this2.state.allowXHR) {}\n\n            _this2.setState({\n              loading: true\n            }); // if first character is @ and second character is letter or number\n            //continue search\n\n\n            var cleanSearch = currentTextArray[i].slice(1); // just getting rid of the @ sign for search\n\n            _this2.setState({\n              currentSearch: cleanSearch\n            }); // CHECKING IF WE ALREADY HAVE SEARCHED THIS\n\n\n            if (!Boolean(_this2.state.prevSearches[cleanSearch])) {\n              // let's search for it now\n              // then get the results and store it in THIS.STATE\n              // then we're going to put that shit on the page.\n              console.log(\"1 this has never been searched before\");\n              console.log(\"2 new search!\", cleanSearch);\n              results = [];\n              axios.get(\"http://localhost:4000/twitter/user/search?username=\" + cleanSearch).then(function (res) {\n                // console.log(res.data.users);\n                var allUsers = res.data.users;\n                var sixSuggestions = allUsers.slice(0, 6); // console.log(sixSuggestions);\n                // looping through the 6 item array to get the info we want\n\n                for (var k = 0; k < sixSuggestions.length; k++) {\n                  var screen_name = sixSuggestions[k].screen_name; // CUBS\n\n                  var name = sixSuggestions[k].name; // Chicago Cubs\n\n                  var verified = sixSuggestions[k].verified; // Chicago Cubs\n\n                  var profile_image_url = sixSuggestions[k].profile_image_url; //cubs.jpg\n\n                  results.push({\n                    \"screen_name\": screen_name,\n                    \"name\": name,\n                    \"verified\": verified,\n                    \"profile_image_url\": profile_image_url\n                  });\n                }\n\n                var thisstateprevSearches = _this2.state.prevSearches; //creating pseuedo object\n\n                thisstateprevSearches[cleanSearch] = results; // adding to that pseudo object\n\n                _this2.setState({\n                  prevSearches: thisstateprevSearches,\n                  loading: false\n                }); // setting state to pseudo object\n\n              }); // END AXIOS CALL\n            } else {\n              _this2.setState({\n                loading: false\n              });\n\n              console.log(\"a: this already has been searched\");\n              console.log(\"b:so let's query this information\");\n            }\n          })();\n        } else {\n          // this is just a normal word being typed. NOT a tag\n          this.setState({\n            currentSearch: \"\"\n          });\n        }\n      } // END FOR LOOP THAT GOES THROUGH EACH WORD\n\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(name) {\n      console.log(1, \"name\", name); // this.setState({ selected: name });\n      // console.log(\"1a\", this.state.selected);\n\n      var currentTextArray = this.state.currentInput.split(\" \");\n      console.log(2, \"Cta\", currentTextArray);\n\n      for (var i = 0; i < currentTextArray.length; i++) {\n        console.log(3, currentTextArray[i]);\n        console.log(4, \"@\" + this.state.currentSearch);\n\n        if (currentTextArray[i] == \"@\" + this.state.currentSearch) {\n          console.log(5, name);\n          var newversion = \"@\" + name + \" \";\n          console.log(6, newversion);\n          currentTextArray[i] = newversion;\n          console.log(7, currentTextArray[i]);\n        }\n      }\n\n      var currentTextArrayJoined = currentTextArray.join(\" \");\n      console.log(8, currentTextArrayJoined);\n      document.getElementById(\"tweetTextarea\").value = currentTextArrayJoined;\n      document.getElementById(\"tweetTextarea\").focus();\n      this.setState({\n        currentText: currentTextArrayJoined\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // console.log(\"render=====\");\n      // console.log(Boolean(this.state.currentSearch));\n      // console.log(this.state.currentSearch);\n      // console.log(this.state.prevSearches[this.state.currentSearch]);\n      if (this.state.currentSearch) {\n        var currentSearch = this.state.currentSearch;\n        var dataArray = this.state.prevSearches[currentSearch]; // console.log(\"dataArray\", dataArray);\n\n        if (dataArray) {\n          // console.log(\"aaa\");\n          var displaySuggestions = dataArray.map(function (user, index) {\n            return React.createElement(Suggestion, {\n              screen_name: user.screen_name,\n              name: user.name,\n              src: user.profile_image_url,\n              verified: user.verified,\n              onSelect: _this3.handleSelect,\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            });\n          });\n        } else {\n          // console.log(\"bbb\");\n          var displaySuggestions = \"\";\n        }\n      } else {// console.log(\"not yet\");\n      }\n\n      return React.createElement(\"div\", {\n        id: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"tweetContainer\",\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"tweetTextareaDiv\",\n        className: \"col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"tweetTextarea\",\n        onChange: this.handleChange,\n        autoFocus: \"autoFocus\",\n        maxLength: \"280\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"charLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.charactersLeft), React.createElement(Submit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(Loading, {\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"displaySuggestions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, displaySuggestions))));\n    }\n  }]);\n\n  return TwitterTextArea;\n}(Component);\n\nexport default TwitterTextArea;","map":{"version":3,"sources":["/Users/alexkim/code/twitterusername/src/App.js"],"names":["React","Component","axios","Suggestion","Loading","Submit","Header","TwitterTextArea","props","state","currentInput","currentSearch","selected","charactersLeft","prevSearches","loading","allowXHR","handleChange","bind","handleSelect","setState","e","currentText","target","value","length","console","log","setTimeout","currentTextArray","split","i","test","charAt","results","cleanSearch","slice","Boolean","get","then","res","allUsers","data","users","sixSuggestions","k","screen_name","name","verified","profile_image_url","push","thisstateprevSearches","newversion","currentTextArrayJoined","join","document","getElementById","focus","dataArray","displaySuggestions","map","user","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import debounce from 'lodash/debounce';\nimport axios from 'axios';\n// import logo from './logo.svg';\nimport './App.css';\nimport Suggestion from './Suggestion';\nimport Loading from './Loading';\nimport Submit from './Submit';\nimport Header from './Header';\n\nclass TwitterTextArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentInput: \"\",\n      currentSearch: \"\",\n      selected: \"\",\n      charactersLeft: 280,\n\n      prevSearches : {\n         // \"da\" : [\n         //   {\"screen_name\": \"Dan\", \"profile_image_url\": \"dan.jpg\"},\n         //   {\"screen_name\": \"David\", \"profile_image_url\": \"david.jpg\"}\n         // ]\n         // ,\n         // \"sprout\" : [\n         //    {\"screen_name\": \"SproutSocial\", \"profile_image_url\": \"sprout.jpg\"},\n         //    {\"screen_name\": \"SproutSupport\", \"profile_image_url\": \"support.jpg\"}\n         // ]\n       },\n       loading: false,\n       allowXHR: true\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.allowXHR = this.allowXHR.bind(this);\n  }\n  allowXHR(){\n    this.setState({ allowXHR: true});\n  }\n  handleChange(e) {\n    var currentText = e.target.value; // this is the entire value of textarea\n    this.setState({\n      allowXHR: false,\n\n      currentInput: currentText,\n      charactersLeft: 280 - currentText.length\n    });\n    console.log(1, \"setState allowXHR FALSE\");\n    console.log(2, \"setTimeout to allowXHR TRUE in .5 seconds...\");\n    setTimeout(this.allowXHR, 500);\n\n    var currentTextArray = currentText.split(\" \");\n    // going to split(\" \") by each word\n    //now looking for any possible tagging and then making possible changes\n    for (var i = 0; i < currentTextArray.length; i++) {\n\n\n      if (/[a-zA-Z0-9]/.test(currentTextArray[i].charAt(1)) && /^(@)/.test(currentTextArray[i]) && currentTextArray[i].length >= 3 && currentTextArray[i].charAt(currentTextArray[i].length) != \" \") {\n\n\n\n        if(this.state.allowXHR){\n\n        }\n\n\n\n        this.setState({loading: true});\n        // if first character is @ and second character is letter or number\n        //continue search\n        let cleanSearch = currentTextArray[i].slice(1); // just getting rid of the @ sign for search\n        this.setState({ currentSearch: cleanSearch })\n\n        // CHECKING IF WE ALREADY HAVE SEARCHED THIS\n        if ( !Boolean(this.state.prevSearches[cleanSearch]) ) {\n            // let's search for it now\n            // then get the results and store it in THIS.STATE\n            // then we're going to put that shit on the page.\n            console.log(\"1 this has never been searched before\");\n            console.log(\"2 new search!\", cleanSearch);\n            var results = [];\n            axios.get(\"http://localhost:4000/twitter/user/search?username=\" + cleanSearch)\n            .then(res => {\n              // console.log(res.data.users);\n              const allUsers = res.data.users;\n              const sixSuggestions = allUsers.slice(0, 6);\n              // console.log(sixSuggestions);\n              // looping through the 6 item array to get the info we want\n              for (let k = 0; k < sixSuggestions.length; k++) {\n                let screen_name = sixSuggestions[k].screen_name;  // CUBS\n                let name = sixSuggestions[k].name;  // Chicago Cubs\n                let verified = sixSuggestions[k].verified;  // Chicago Cubs\n                let profile_image_url = sixSuggestions[k].profile_image_url; //cubs.jpg\n                results.push({\"screen_name\": screen_name, \"name\": name, \"verified\": verified, \"profile_image_url\": profile_image_url});\n              }\n              var thisstateprevSearches = this.state.prevSearches; //creating pseuedo object\n              thisstateprevSearches[cleanSearch] = results;  // adding to that pseudo object\n              this.setState({ prevSearches : thisstateprevSearches, loading: false});  // setting state to pseudo object\n\n            }) // END AXIOS CALL\n        } else {\n          this.setState({loading: false});\n          console.log(\"a: this already has been searched\");\n          console.log(\"b:so let's query this information\");\n        }\n\n      } else {\n        // this is just a normal word being typed. NOT a tag\n        this.setState({currentSearch: \"\"});\n      }\n    }// END FOR LOOP THAT GOES THROUGH EACH WORD\n  }\n\n  handleSelect(name){\n    console.log(1, \"name\", name);\n    // this.setState({ selected: name });\n    // console.log(\"1a\", this.state.selected);\n    var currentTextArray = this.state.currentInput.split(\" \");\n    console.log(2, \"Cta\", currentTextArray);\n    for (var i = 0; i < currentTextArray.length; i++) {\n      console.log(3, currentTextArray[i]);\n      console.log(4, \"@\"+this.state.currentSearch);\n      if( currentTextArray[i] == (\"@\"+this.state.currentSearch) ){\n        console.log(5, name);\n        var newversion = \"@\"+name+\" \"\n        console.log(6, newversion);\n        currentTextArray[i] = newversion;\n        console.log(7, currentTextArray[i]);\n      }\n    }\n    var currentTextArrayJoined = currentTextArray.join(\" \");\n    console.log(8, currentTextArrayJoined);\n    document.getElementById(\"tweetTextarea\").value = currentTextArrayJoined;\n    document.getElementById(\"tweetTextarea\").focus();\n    this.setState({ currentText: currentTextArrayJoined });\n\n  }\n  render() {\n    // console.log(\"render=====\");\n    // console.log(Boolean(this.state.currentSearch));\n    // console.log(this.state.currentSearch);\n    // console.log(this.state.prevSearches[this.state.currentSearch]);\n    if (this.state.currentSearch) {\n      var currentSearch = this.state.currentSearch;\n      var dataArray = this.state.prevSearches[currentSearch];\n      // console.log(\"dataArray\", dataArray);\n      if(dataArray){\n        // console.log(\"aaa\");\n        var displaySuggestions =  dataArray.map((user, index) =>\n          <Suggestion screen_name={user.screen_name} name={user.name} src={user.profile_image_url} verified={user.verified} onSelect={this.handleSelect} key={index}/>\n        )\n      } else{\n        // console.log(\"bbb\");\n        var displaySuggestions = \"\";\n      }\n    } else {\n      // console.log(\"not yet\");\n    }\n\n\n    return (\n      <div id=\"app\">\n        <Header/>\n        <div id=\"tweetContainer\" className=\"row\">\n          <div id=\"tweetTextareaDiv\" className=\"col s12\">\n            <textarea\n              type=\"text\"\n              id=\"tweetTextarea\"\n              onChange={this.handleChange}\n              autoFocus=\"autoFocus\"\n              maxLength=\"280\">\n\n              </textarea>\n              <p id=\"charLeft\">{this.state.charactersLeft}</p>\n              <Submit />\n            </div>\n            <Loading loading={this.state.loading}/>\n            <div>\n              <div id=\"displaySuggestions\">{displaySuggestions}</div>\n            </div>\n          </div>\n      </div>);\n      }\n    }\n\nexport default TwitterTextArea;\n"]},"metadata":{},"sourceType":"module"}